@startuml

title __VIEW's Class Diagram__\n

  namespace com.example.widget_turntable {
    namespace hnsycsxhzcsh_turntableView {
      namespace view {
        class com.example.widget_turntable.hnsycsxhzcsh_turntableView.view.TurntableView {
            - TAG : String
            - isClockwise : boolean
            - isDrawingLottery : boolean
            - mBitmaps : List<Bitmap>
            - mCenterX : int
            - mCenterY : int
            - mColors : ArrayList<Integer>
            - mCurrentAngle : float
            - mDetector : GestureDetectorCompat
            - mDuration : long
            - mHei : int
            - mNamesStrs : ArrayList<String>
            - mOffsetAngle : float
            - mOnFlingAnimator : ValueAnimator
            - mPaint : Paint
            - mPanNum : Integer
            - mPercentage : float
            - mRadius : int
            - mRandomPositionPro : float
            - mScreenHeight : int
            - mScreenWidth : int
            - mStartX : float
            - mStartY : float
            - mWid : int
            + TurntableView()
            + TurntableView()
            + TurntableView()
            + getRandom()
            + getRandomPositionPro()
            + onTouchEvent()
            + setBackColor()
            + setDatas()
            + startRotate()
            + startRotate()
            # onDraw()
            # onMeasure()
            # onSizeChanged()
            - drawBackground()
            - drawImage()
            - drawText()
            - initView()
            - setRotate()
            - setScrollToPosition()
        }
      }
    }
  }
  

  namespace com.example.widget_turntable {
    namespace hnsycsxhzcsh_turntableView {
      namespace view {
        interface com.example.widget_turntable.hnsycsxhzcsh_turntableView.view.TurntableView.ITurntableListener {
            {abstract} + onEnd()
            {abstract} + onStart()
        }
      }
    }
  }
  

  namespace com.example.widget_turntable {
    namespace hnsycsxhzcsh_turntableView {
      namespace view {
        class com.example.widget_turntable.hnsycsxhzcsh_turntableView.view.TurntableView.TurntableGestureListener {
            + onDown()
            + onFling()
            + onScroll()
        }
      }
    }
  }
  

  com.example.widget_turntable.hnsycsxhzcsh_turntableView.view.TurntableView -up-|> android.view.View
  com.example.widget_turntable.hnsycsxhzcsh_turntableView.view.TurntableView o-- com.example.widget_turntable.hnsycsxhzcsh_turntableView.view.TurntableView.ITurntableListener : listener
  com.example.widget_turntable.hnsycsxhzcsh_turntableView.view.TurntableView +-down- com.example.widget_turntable.hnsycsxhzcsh_turntableView.view.TurntableView.ITurntableListener
  com.example.widget_turntable.hnsycsxhzcsh_turntableView.view.TurntableView +-down- com.example.widget_turntable.hnsycsxhzcsh_turntableView.view.TurntableView.TurntableGestureListener
  com.example.widget_turntable.hnsycsxhzcsh_turntableView.view.TurntableView.TurntableGestureListener -up-|> android.view.GestureDetector.SimpleOnGestureListener


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
